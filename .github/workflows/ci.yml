name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ['1.15.4']
        otp: ['26.0']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Run tests
      run: mix test --cover --export-coverage default
      
    - name: Generate coverage report
      run: mix test.coverage

  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        elixir: ['1.15.4']
        otp: ['26.0']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Restore PLT cache
      uses: actions/cache@v3
      id: plt_cache
      with:
        key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-plt
        restore-keys: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-plt
        path: priv/plts

    - name: Install dependencies
      run: mix deps.get

    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer
